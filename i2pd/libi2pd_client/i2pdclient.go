/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: libi2pd_client.i

package i2pdclient

import "syscall"
import "unsafe"
import "sync"


type _ syscall.Sockaddr




type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


type _ sync.Mutex

func SwigCgocall()
func SwigCgocallDone()
func SwigCgocallBack()
func SwigCgocallBackDone()

//extern go.i2pdclient__wrap_Swig_free_i2pdclient_813fe33f58267b59
func _swig_wrap_Swig_free(base uintptr)

func Swig_free(arg1 uintptr) {
	defer SwigCgocallDone()
	SwigCgocall()
	_swig_wrap_Swig_free(arg1)
}

//extern go.i2pdclient__wrap_Swig_malloc_i2pdclient_813fe33f58267b59
func _swig_wrap_Swig_malloc(base int) (_ uintptr)

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	defer SwigCgocallDone()
	SwigCgocall()
	return _swig_wrap_Swig_malloc(arg1)
}

//extern go.i2pdclient__wrap_i2p_set_i2pdclient_813fe33f58267b59
func _swig_wrap_i2p_set(base uintptr)

func SetI2p(arg1 Namespace) {
	defer SwigCgocallDone()
	SwigCgocall()
	_swig_wrap_i2p_set(arg1.Swigcptr())
}

//extern go.i2pdclient__wrap_i2p_get_i2pdclient_813fe33f58267b59
func _swig_wrap_i2p_get() (base SwigcptrNamespace)

func GetI2p() (_swig_ret Namespace) {
	defer SwigCgocallDone()
	SwigCgocall()
	return _swig_wrap_i2p_get()
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrNamespace uintptr
type Namespace interface {
	Swigcptr() uintptr;
}
func (p SwigcptrNamespace) Swigcptr() uintptr {
	return uintptr(p)
}

